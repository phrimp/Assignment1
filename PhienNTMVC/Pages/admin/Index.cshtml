@page
@model PhienNTMVC.Pages.admin.IndexModel
@{
    ViewData["Title"] = "User Management";
    Layout = "_AdminLayout.cshtml";
}

<h1>User Management</h1>

<div class="card shadow-sm">
    <div class="card-header">
        <div class="row align-items-center">
            <div class="col">
                <h5 class="mb-0">Users List</h5>
            </div>
            <div class="col-auto">
                <a asp-page="/admin/Create" class="btn btn-primary btn-sm">
                    <i class="bi bi-plus-circle me-1"></i>Create New
                </a>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="mb-3">
            <form method="get" class="d-flex flex-wrap">
                <div class="input-group me-2 mb-2 mb-md-0" style="max-width: 300px;">
                    <span class="input-group-text"><i class="bi bi-search"></i></span>
                    <input type="text" name="SearchTerm" class="form-control" placeholder="Search users..." value="@Model.SearchTerm">
                </div>
                <div class="input-group me-2 mb-2 mb-md-0" style="max-width: 200px;">
                    <span class="input-group-text"><i class="bi bi-filter"></i></span>
                    <select name="RoleFilter" class="form-select" asp-items="Model.RoleList">
                        <option value="">All Roles</option>
                    </select>
                </div>
                <div class="d-flex mb-2 mb-md-0">
                    <button type="submit" class="btn btn-outline-primary me-2">Search</button>
                    @if (!string.IsNullOrEmpty(Model.SearchTerm) || !string.IsNullOrEmpty(Model.RoleFilter))
                    {
                        <a asp-page="/admin/Index" class="btn btn-outline-secondary">Clear</a>
                    }
                </div>
            </form>
        </div>

        <div id="notifications-area"></div>

        <div class="table-responsive">
            <table class="table table-striped table-hover" id="usersTable">
                <thead class="table-light">
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Role</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.SystemAccount.Any())
                    {
                        @foreach (var item in Model.SystemAccount)
                        {
                            <tr data-user-id="@item.AccountId">
                                <td>@item.AccountName</td>
                                <td>@item.AccountEmail</td>
                                <td>
                                    @{
                                        string roleName = item.AccountRole;
                                        string badgeClass = "bg-secondary";
                                        if (roleName == "Admin" || roleName == "0")
                                        {
                                            roleName = "Admin";
                                            badgeClass = "bg-danger";
                                        }
                                        else if (roleName == "Staff" || roleName == "1")
                                        {
                                            roleName = "Staff";
                                            badgeClass = "bg-primary";
                                        }
                                        else if (roleName == "Lecturer" || roleName == "2")
                                        {
                                            roleName = "Lecturer";
                                            badgeClass = "bg-success";
                                        }
                                    }
                                    <span class="badge @badgeClass">@roleName</span>
                                </td>
                                <td class="text-center">
                                    <div class="btn-group" role="group">
                                        <a asp-page="/admin/Details" asp-route-id="@item.AccountId" class="btn btn-outline-info btn-sm">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <a asp-page="/admin/Edit" asp-route-id="@item.AccountId" class="btn btn-outline-primary btn-sm">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        @if (item.AccountId == Model.CurrentUserId)
                                        {
                                            <button type="button" class="btn btn-outline-danger btn-sm" disabled>
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        }
                                        else
                                        {
                                            <a asp-page="/admin/Delete" asp-route-id="@item.AccountId" class="btn btn-outline-danger btn-sm">
                                                <i class="bi bi-trash"></i>
                                            </a>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" class="text-center">No users found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>

    <script>
        // Inline SignalR Client
        document.addEventListener('DOMContentLoaded', function() {
            // Create the connection
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/userHub")
                .build();

            // Handler for UserDeleted event
            connection.on("UserDeleted", function (userId, userName) {
                // Find and remove the deleted user row
                const row = document.querySelector(`tr[data-user-id="${userId}"]`);
                if (row) {
                    row.remove();

                    // Check if table is now empty
                    const tbody = document.querySelector('#usersTable tbody');
                    if (tbody && tbody.children.length === 0) {
                        tbody.innerHTML = '<tr><td colspan="4" class="text-center">No users found.</td></tr>';
                    }
                }

                // Show an alert
                alert(`User "${userName}" has been deleted.`);
            });

            // Start the connection
            connection.start()
                .then(function() {
                    console.log("SignalR Connected.");
                })
                .catch(function (err) {
                    console.error("SignalR Connection Error: " + err.toString());
                });

            // Show TempData messages
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                        alert('@TempData["SuccessMessage"]');
            </text>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                        alert('@TempData["ErrorMessage"]');
            </text>
        }
        });
    </script>
}